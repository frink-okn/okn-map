('https://w3id.org/linkml/meta.context.jsonld',)
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix linkml: <https://w3id.org/linkml/> .
@prefix okn: <https://purl.org/okn/> .
@prefix okns: <https://purl.org/okn/schema/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix pav: <http://purl.org/pav/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

okns:dtype_dateUnion a linkml:TypeDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "date union" ;
    skos:definition "A datatype that is the union of date datatypes." ;
    skos:inScheme okns:dtype ;
    linkml:base "str" ;
    linkml:definition_uri okns:DtypeDateUnion ;
    linkml:typeof okns:string ;
    linkml:uri <http://www.linkedmodel.org/schema/dtype#dateUnion> .

okns:dtype_numericUnion a linkml:TypeDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "numeric union" ;
    skos:definition "A datatype that is the union of numeric xsd data types.␊\"dtype:numericUnion\" is equivalent to the xsd specification that uses an xsd:union of ␊memberTypes=\"xsd:decimal xsd:double xsd:float xsd:integer\"." ;
    skos:inScheme okns:dtype ;
    linkml:base "str" ;
    linkml:definition_uri okns:DtypeNumericUnion ;
    linkml:typeof okns:string ;
    linkml:uri <http://www.linkedmodel.org/schema/dtype#numericUnion> .

okns:DtypeCompositeCodeList a linkml:ClassDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "Composite Code List" ;
    skos:definition "A composite codelist is a codelist made up of other codelists. ␊It does not introduce any new codes." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <dtype:CompositeCodeList> ;
    linkml:class_uri <http://www.linkedmodel.org/schema/dtype#CompositeCodeList> ;
    linkml:definition_uri okns:DtypeCompositeCodeList ;
    linkml:is_a okns:DtypeCodeList ;
    linkml:slot_usage [ ] .

okns:DtypeDerivedCodeList a linkml:ClassDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "Derived Code List" ;
    skos:definition "A derived codelist is a sublist of another codelist. ␊The members that it has must be members of the source list." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <dtype:DerivedCodeList> ;
    linkml:class_uri <http://www.linkedmodel.org/schema/dtype#DerivedCodeList> ;
    linkml:definition_uri okns:DtypeDerivedCodeList ;
    linkml:is_a okns:DtypeCodeList ;
    linkml:slot_usage [ ] .

okns:DtypeEnumeratedValue a linkml:ClassDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "DTYPE Enumerated Value" ;
    skos:definition "The base class for datatypes that have values that are restriced to a set of literals or tokens. ␊The members of the restriction may themselves be restriced by facets that apply to scalar data types." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <dtype:EnumeratedValue> ;
    linkml:class_uri <http://www.linkedmodel.org/schema/dtype#EnumeratedValue> ;
    linkml:definition_uri okns:DtypeEnumeratedValue ;
    linkml:is_a okns:OwlThing ;
    linkml:slot_usage [ ] .

okns:DtypeSimpleCodeList a linkml:ClassDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "Simple Code List" ;
    skos:definition "A simple codelist is one made up only of enumerated values." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <dtype:SimpleCodeList> ;
    linkml:class_uri <http://www.linkedmodel.org/schema/dtype#SimpleCodeList> ;
    linkml:definition_uri okns:DtypeSimpleCodeList ;
    linkml:is_a okns:DtypeCodeList ;
    linkml:slot_usage [ ] .

okns:DtypeValueReference a linkml:ClassDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "Value Reference" ;
    skos:definition "A value reference is a pointer to an Enumerated Value. ␊The original order of the value can be overridden by the \"order\" attribute." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <dtype:ValueReference> ;
    linkml:class_uri <http://www.linkedmodel.org/schema/dtype#ValueReference> ;
    linkml:definition_uri okns:DtypeValueReference ;
    linkml:is_a okns:OwlThing ;
    linkml:slot_usage [ ] .

okns:dtype_code a linkml:SlotDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "code" ;
    skos:definition "A unique value that is assigned to an enumeration member." ;
    skos:editorialNote "No occurrences of this slot in the graph." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <http://www.linkedmodel.org/schema/dtype#code> ;
    skos:note """description: A property for expressing a unique value for a member of an enumeration. 
The range has been set to "xsd:anySimpleType" to allow for any scalar datatype.""" ;
    linkml:definition_uri okns:dtype_code ;
    linkml:inlined true ;
    linkml:range okns:XsdAnySimpleType ;
    linkml:slot_uri <http://www.linkedmodel.org/schema/dtype#code> .

okns:dtype_compositeOf a linkml:SlotDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "composite of" ;
    skos:definition "A property for constructing composite data structures" ;
    skos:editorialNote "No occurrences of this slot in the graph." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <http://www.linkedmodel.org/schema/dtype#compositeOf> ;
    linkml:definition_uri okns:dtype_compositeOf ;
    linkml:inlined true ;
    linkml:range okns:Any ;
    linkml:slot_uri <http://www.linkedmodel.org/schema/dtype#compositeOf> .

okns:dtype_defaultObjectValue a linkml:SlotDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "default object value" ;
    skos:definition "The property \"dtype:defaultValue\" is a general property for specifying an object value in situations where ␊none is specified." ;
    skos:editorialNote "No occurrences of this slot in the graph." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <http://www.linkedmodel.org/schema/dtype#defaultObjectValue> ;
    linkml:definition_uri okns:dtype_defaultObjectValue ;
    linkml:inlined true ;
    linkml:range okns:Any ;
    linkml:slot_uri <http://www.linkedmodel.org/schema/dtype#defaultObjectValue> .

okns:dtype_defaultValue a linkml:SlotDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "default value" ;
    skos:definition "The property \"dtype:defaultValue\" is a general property for specifying a literal value in situations where ␊none is specified." ;
    skos:editorialNote "No occurrences of this slot in the graph." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <http://www.linkedmodel.org/schema/dtype#defaultValue> ;
    linkml:definition_uri okns:dtype_defaultValue ;
    linkml:inlined true ;
    linkml:range okns:Any ;
    linkml:slot_uri <http://www.linkedmodel.org/schema/dtype#defaultValue> .

okns:dtype_derivedFrom a linkml:SlotDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "derived from" ;
    skos:definition "A property for specifying a derivation relationship." ;
    skos:editorialNote "No occurrences of this slot in the graph." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <http://www.linkedmodel.org/schema/dtype#derivedFrom> ;
    linkml:definition_uri okns:dtype_derivedFrom ;
    linkml:inlined true ;
    linkml:range okns:Any ;
    linkml:slot_uri <http://www.linkedmodel.org/schema/dtype#derivedFrom> .

okns:dtype_hasMember a linkml:SlotDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "has member" ;
    skos:definition "A property for specifying how member elements make up a data structure." ;
    skos:editorialNote "No occurrences of this slot in the graph." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <http://www.linkedmodel.org/schema/dtype#hasMember> ;
    linkml:definition_uri okns:dtype_hasMember ;
    linkml:inlined true ;
    linkml:range okns:Any ;
    linkml:slot_uri <http://www.linkedmodel.org/schema/dtype#hasMember> .

okns:dtype_isInvalid a linkml:SlotDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "is invalid" ;
    skos:definition "A boolean flag to state that a value is invalid with respect to its type." ;
    skos:editorialNote "No occurrences of this slot in the graph." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <http://www.linkedmodel.org/schema/dtype#isInvalid> ;
    linkml:definition_uri okns:dtype_isInvalid ;
    linkml:range okns:boolean ;
    linkml:slot_uri <http://www.linkedmodel.org/schema/dtype#isInvalid> .

okns:dtype_literal a linkml:SlotDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "literal" ;
    skos:definition "" ;
    skos:editorialNote "No occurrences of this slot in the graph." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <http://www.linkedmodel.org/schema/dtype#literal> ;
    skos:note """description: A general purpose property for holding string literals as a machine-readable string for how the 
enumerated value can be referred to. 
This can be used when the code value is numeric, as an alternative to using a code. 
Literal is not the same as label which is intended for human readable display. 
For example, a code for January may be 1, the literal may be 'J' or 'jan' and the label 'January'.""" ;
    linkml:definition_uri okns:dtype_literal ;
    linkml:range okns:string ;
    linkml:slot_uri <http://www.linkedmodel.org/schema/dtype#literal> .

okns:dtype_objectValue a linkml:SlotDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "object value" ;
    skos:definition "The property \"dtype:objectValue\" is a general property for specifying an object value in situations where ␊none is specified." ;
    skos:editorialNote "No occurrences of this slot in the graph." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <http://www.linkedmodel.org/schema/dtype#objectValue> ;
    linkml:definition_uri okns:dtype_objectValue ;
    linkml:inlined true ;
    linkml:range okns:Any ;
    linkml:slot_uri <http://www.linkedmodel.org/schema/dtype#objectValue> .

okns:dtype_order a linkml:SlotDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "order" ;
    rdfs:seeAlso <http://www.linkedmodel.org/schema/dtype#orderIndex> ;
    skos:definition "The property \"dtype:order\" provides a means to specify a precedence. ␊One use of order is in specifying ordered enumerations such as \"voag:ConfidentialityLevel\".␊A similar property, but with an important type difference, is \"vaem:orderIndex\".␊This is for use on property occurrences in class axioms where it can be placed on a restriction ␊to specify how that property may be transformed into other representations where ordering has some ␊importance, for example, in XML Schema sequences. ␊Whereas \"vaem:order\" is a datatype property, \"vaem:orderIndex\" is an annotation property.␊The \"order\" property specifies a value that can establish precedence and ordinality. ␊One use of order is in make an enumeration an ordinal type. ␊For example \"RiskLevel\" might have the values \"very low\", \"low\", \"medium\", \"high\" and \"very high\".␊A query that asks for all risks that are greater than \"medium\" would use the ordinal values and return ␊those resources that have “medium”, “high” and “very high” ordinality." ;
    skos:editorialNote "No occurrences of this slot in the graph." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <http://www.linkedmodel.org/schema/dtype#order> ;
    linkml:definition_uri okns:dtype_order ;
    linkml:range okns:integer ;
    linkml:slot_uri <http://www.linkedmodel.org/schema/dtype#order> .

okns:dtype_orderIndex a linkml:SlotDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "order index" ;
    skos:definition "The property \"dtype:orderIndex\" is an annotation property to specify a position that some value or ␊structure will have. ␊One use is to specify the place that a resource has in a sequence.␊Another use is on property occurrences in class axioms, where \"vaem:orderIndex\" is placed on a ␊restriction to specify how that property may be transformed into a representation where ordering has ␊some importance, for example, in XML Schema sequences." ;
    skos:editorialNote "No occurrences of this slot in the graph." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <http://www.linkedmodel.org/schema/dtype#orderIndex> ;
    linkml:definition_uri okns:dtype_orderIndex ;
    linkml:range okns:integer ;
    linkml:slot_uri <http://www.linkedmodel.org/schema/dtype#orderIndex> .

okns:dtype_refersTo a linkml:SlotDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "refers to" ;
    skos:definition "An indirection pointer for relating a slot in am occurrence data structure, such as \"dtype:ValueReference\" with another resource." ;
    skos:editorialNote "No occurrences of this slot in the graph." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <http://www.linkedmodel.org/schema/dtype#refersTo> ;
    linkml:definition_uri okns:dtype_refersTo ;
    linkml:inlined true ;
    linkml:range okns:Any ;
    linkml:slot_uri <http://www.linkedmodel.org/schema/dtype#refersTo> .

okns:dtype_type a linkml:SlotDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "datatype" ;
    skos:editorialNote "No occurrences of this slot in the graph." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <http://www.linkedmodel.org/schema/dtype#type> ;
    linkml:definition_uri okns:dtype_type ;
    linkml:inlined true ;
    linkml:range okns:Any ;
    linkml:slot_uri <http://www.linkedmodel.org/schema/dtype#type> .

okns:dtype_value a linkml:SlotDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "value" ;
    skos:definition "The property \"dtype:value\" is a general property for specifying a literal value in situations where ␊none is specified." ;
    skos:editorialNote "No occurrences of this slot in the graph." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <http://www.linkedmodel.org/schema/dtype#value> ;
    linkml:definition_uri okns:dtype_value ;
    linkml:inlined true ;
    linkml:range okns:XsdAnySimpleType ;
    linkml:slot_uri <http://www.linkedmodel.org/schema/dtype#value> .

okns:DtypeEnumeration a linkml:ClassDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "DTYPE Enumeration" ;
    skos:definition "A type that serves as a container for the enumerated values of an enumeration. ␊This enables the enumeration itself to be referenceable. ␊One need for this is in determing the default value of an enumeration.␊Another need is in the management of sub-enumerations and composite enumerations." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <dtype:Enumeration> ;
    linkml:class_uri <http://www.linkedmodel.org/schema/dtype#Enumeration> ;
    linkml:definition_uri okns:DtypeEnumeration ;
    linkml:is_a okns:OwlThing ;
    linkml:slot_usage [ ] .

okns:XsdAnySimpleType a linkml:ClassDefinition ;
    dcterms:title "No class (entity type) name specified -- this class is noted as being in the domain or range of a slot in this graph but has not itself been defined." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation xsd:anySimpleType ;
    linkml:class_uri xsd:anySimpleType ;
    linkml:definition_uri okns:XsdAnySimpleType ;
    linkml:slot_usage [ ] .

okns:DtypeCodeList a linkml:ClassDefinition ;
    dcterms:source <http://www.linkedmodel.org/schema/dtype> ;
    dcterms:title "Codelist" ;
    skos:definition "A codelist is a controlled vocabulary of terms that are used to represent permissible values of a ␊variable in information systems. ␊The representaiton of codes in \"dtype\" has been influenced by CCTS and UBL." ;
    skos:inScheme okns:dtype ;
    skos:mappingRelation <dtype:CodeList> ;
    linkml:class_uri <http://www.linkedmodel.org/schema/dtype#CodeList> ;
    linkml:definition_uri okns:DtypeCodeList ;
    linkml:is_a okns:DtypeEnumeration ;
    linkml:slot_usage [ ] .

okns:dtype a linkml:SchemaDefinition ;
    dcterms:license "https://creativecommons.org/publicdomain/zero/1.0/" ;
    pav:createdOn "2025-09-03T11:21:29.874408"^^xsd:dateTime ;
    pav:lastUpdatedOn "2025-09-03T11:21:29.874408"^^xsd:dateTime ;
    skos:note "title: Datatype Ontology" ;
    sh:declare [ sh:namespace <http://www.linkedmodel.org/schema/dtype#> ;
            sh:prefix "dtype" ],
        [ sh:namespace dcterms: ;
            sh:prefix "dct" ],
        [ sh:namespace xsd: ;
            sh:prefix "xsd" ],
        [ sh:namespace okn: ;
            sh:prefix "okn" ],
        [ sh:namespace rdfs: ;
            sh:prefix "rdfs" ],
        [ sh:namespace owl: ;
            sh:prefix "owl" ],
        [ sh:namespace linkml: ;
            sh:prefix "linkml" ],
        [ sh:namespace rdf: ;
            sh:prefix "rdf" ],
        [ sh:namespace vaem: ;
            sh:prefix "vaem" ],
        [ sh:namespace okns: ;
            sh:prefix "okns" ] ;
    linkml:annotations [ skos:example [ linkml:classes [ skos:example [ vaem:GraphMetaData [ skos:example 1 ;
                                            linkml:tag vaem:GraphMetaData ] ;
                                    rdfs:Datatype [ skos:example 3 ;
                                            linkml:tag rdfs:Datatype ] ] ;
                            linkml:tag okns:classes ] ;
                    linkml:pairs [ skos:example [ rdfs:label [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example 1 ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ;
                                                    rdfs:Datatype [ skos:example [ linkml:string [ skos:example 2 ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag rdfs:Datatype ] ] ;
                                            linkml:tag rdfs:label ] ;
                                    dcterms:created [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:date [ skos:example 1 ;
                                                                            linkml:tag okns:date ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag dcterms:created ] ;
                                    dcterms:description [ skos:example [ rdfs:Datatype [ skos:example [ linkml:string [ skos:example 2 ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag rdfs:Datatype ] ] ;
                                            linkml:tag dcterms:description ] ;
                                    dcterms:modified [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:date [ skos:example 1 ;
                                                                            linkml:tag okns:date ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag dcterms:modified ] ;
                                    dcterms:title [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example 1 ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag dcterms:title ] ;
                                    vaem:description [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example 1 ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:description ] ;
                                    vaem:hasGraphRole [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example 1 ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:hasGraphRole ] ;
                                    vaem:hasLicenseType [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example 1 ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:hasLicenseType ] ;
                                    vaem:hasOwner [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example 1 ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:hasOwner ] ;
                                    vaem:hasSteward [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example 1 ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:hasSteward ] ;
                                    vaem:intent [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example 1 ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:intent ] ;
                                    vaem:latestPublishedVersion [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example 1 ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:latestPublishedVersion ] ;
                                    vaem:logo [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example 1 ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:logo ] ;
                                    vaem:name [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example 1 ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:name ] ;
                                    vaem:namespace [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example 1 ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:namespace ] ;
                                    vaem:namespacePrefix [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example 1 ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:namespacePrefix ] ;
                                    vaem:owner [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example 1 ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:owner ] ;
                                    vaem:previousPublishedVersion [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example 1 ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:previousPublishedVersion ] ;
                                    vaem:releaseDate [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:date [ skos:example 1 ;
                                                                            linkml:tag okns:date ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:releaseDate ] ;
                                    vaem:revision [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example 1 ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:revision ] ;
                                    vaem:title [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example 1 ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:title ] ;
                                    vaem:turtleFileURL [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example 1 ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:turtleFileURL ] ;
                                    vaem:usesNonImportedResource [ skos:example [ vaem:GraphMetaData [ skos:example [ owl:AnnotationProperty [ skos:example 1 ;
                                                                            linkml:tag owl:AnnotationProperty ] ;
                                                                    linkml:uri [ skos:example 5 ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:usesNonImportedResource ] ;
                                    vaem:withAttributionTo [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example 1 ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:withAttributionTo ] ;
                                    rdfs:isDefinedBy [ skos:example [ vaem:GraphMetaData [ skos:example [ owl:Ontology [ skos:example 1 ;
                                                                            linkml:tag owl:Ontology ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ;
                                                    rdfs:Datatype [ skos:example [ owl:Ontology [ skos:example 2 ;
                                                                            linkml:tag owl:Ontology ] ] ;
                                                            linkml:tag rdfs:Datatype ] ] ;
                                            linkml:tag rdfs:isDefinedBy ] ;
                                    rdfs:subClassOf [ skos:example [ rdfs:Datatype [ skos:example [ linkml:uri [ skos:example 2 ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag rdfs:Datatype ] ] ;
                                            linkml:tag rdfs:subClassOf ] ;
                                    owl:equivalentClass [ skos:example [ rdfs:Datatype [ skos:example [ rdfs:Datatype [ skos:example 1 ;
                                                                            linkml:tag rdfs:Datatype ] ;
                                                                    owl:Class [ skos:example 1 ;
                                                                            linkml:tag owl:Class ] ] ;
                                                            linkml:tag rdfs:Datatype ] ] ;
                                            linkml:tag owl:equivalentClass ] ] ;
                            linkml:tag okns:pairs ] ;
                    linkml:slots [ skos:example [ rdfs:label [ skos:example 3 ;
                                            linkml:tag rdfs:label ] ;
                                    dcterms:created [ skos:example 1 ;
                                            linkml:tag dcterms:created ] ;
                                    dcterms:description [ skos:example 2 ;
                                            linkml:tag dcterms:description ] ;
                                    dcterms:modified [ skos:example 1 ;
                                            linkml:tag dcterms:modified ] ;
                                    dcterms:title [ skos:example 1 ;
                                            linkml:tag dcterms:title ] ;
                                    vaem:description [ skos:example 1 ;
                                            linkml:tag vaem:description ] ;
                                    vaem:hasGraphRole [ skos:example 1 ;
                                            linkml:tag vaem:hasGraphRole ] ;
                                    vaem:hasLicenseType [ skos:example 1 ;
                                            linkml:tag vaem:hasLicenseType ] ;
                                    vaem:hasOwner [ skos:example 1 ;
                                            linkml:tag vaem:hasOwner ] ;
                                    vaem:hasSteward [ skos:example 1 ;
                                            linkml:tag vaem:hasSteward ] ;
                                    vaem:intent [ skos:example 1 ;
                                            linkml:tag vaem:intent ] ;
                                    vaem:latestPublishedVersion [ skos:example 1 ;
                                            linkml:tag vaem:latestPublishedVersion ] ;
                                    vaem:logo [ skos:example 1 ;
                                            linkml:tag vaem:logo ] ;
                                    vaem:name [ skos:example 1 ;
                                            linkml:tag vaem:name ] ;
                                    vaem:namespace [ skos:example 1 ;
                                            linkml:tag vaem:namespace ] ;
                                    vaem:namespacePrefix [ skos:example 1 ;
                                            linkml:tag vaem:namespacePrefix ] ;
                                    vaem:owner [ skos:example 1 ;
                                            linkml:tag vaem:owner ] ;
                                    vaem:previousPublishedVersion [ skos:example 1 ;
                                            linkml:tag vaem:previousPublishedVersion ] ;
                                    vaem:releaseDate [ skos:example 1 ;
                                            linkml:tag vaem:releaseDate ] ;
                                    vaem:revision [ skos:example 1 ;
                                            linkml:tag vaem:revision ] ;
                                    vaem:title [ skos:example 1 ;
                                            linkml:tag vaem:title ] ;
                                    vaem:turtleFileURL [ skos:example 1 ;
                                            linkml:tag vaem:turtleFileURL ] ;
                                    vaem:usesNonImportedResource [ skos:example 6 ;
                                            linkml:tag vaem:usesNonImportedResource ] ;
                                    vaem:withAttributionTo [ skos:example 1 ;
                                            linkml:tag vaem:withAttributionTo ] ;
                                    rdfs:isDefinedBy [ skos:example 3 ;
                                            linkml:tag rdfs:isDefinedBy ] ;
                                    rdfs:subClassOf [ skos:example 2 ;
                                            linkml:tag rdfs:subClassOf ] ;
                                    owl:equivalentClass [ skos:example 2 ;
                                            linkml:tag owl:equivalentClass ] ;
                                    owl:unionOf [ skos:example 1 ;
                                            linkml:tag owl:unionOf ] ] ;
                            linkml:tag okns:slots ] ] ;
            linkml:tag okns:counts ],
        [ skos:example [ linkml:classes [ skos:example [ vaem:GraphMetaData [ skos:example "dtype:GMD_DTYPE" ;
                                            linkml:tag vaem:GraphMetaData ] ;
                                    rdfs:Datatype [ skos:example "dtype:numericUnion" ;
                                            linkml:tag rdfs:Datatype ] ] ;
                            linkml:tag okns:classes ] ;
                    linkml:pairs [ skos:example [ rdfs:label [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example [ rdf:predicate [ skos:example "rdfs:label" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "DTYPE Schema Version 2.1 Metadata" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ;
                                                    rdfs:Datatype [ skos:example [ linkml:string [ skos:example [ rdf:predicate [ skos:example "rdfs:label" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "date union" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:dateUnion" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag rdfs:Datatype ] ] ;
                                            linkml:tag rdfs:label ] ;
                                    dcterms:created [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:date [ skos:example [ rdf:predicate [ skos:example "dct:created" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "2011-05-29" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:date ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag dcterms:created ] ;
                                    dcterms:description [ skos:example [ rdfs:Datatype [ skos:example [ linkml:string [ skos:example [ rdf:predicate [ skos:example "dct:description" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "A datatype that is the union of date datatypes." ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:dateUnion" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag rdfs:Datatype ] ] ;
                                            linkml:tag dcterms:description ] ;
                                    dcterms:modified [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:date [ skos:example [ rdf:predicate [ skos:example "dct:modified" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "2023-11-14" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:date ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag dcterms:modified ] ;
                                    dcterms:title [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example [ rdf:predicate [ skos:example "dct:title" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "DTYPE Version 2.1 Metadata" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag dcterms:title ] ;
                                    vaem:description [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example [ rdf:predicate [ skos:example "vaem:description" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example """
The ontology "dtype" provides a specification of simple data types such as enumerations and codelists. 
These are needed in support of the conversion of XML Schemas and UML Models to OWL. 
The purpose of "dtype" is to provide a foundation for expressing rich data types. 
These data types are typically needed when dealing with OWL representations of data structures derived from XML Schema.
""" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:description ] ;
                                    vaem:hasGraphRole [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example [ rdf:predicate [ skos:example "vaem:hasGraphRole" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "vaem:SchemaGraph" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:hasGraphRole ] ;
                                    vaem:hasLicenseType [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example [ rdf:predicate [ skos:example "vaem:hasLicenseType" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "http://voag.linkedmodel.org/voag/CC-SHAREALIKE_3PT0-US" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:hasLicenseType ] ;
                                    vaem:hasOwner [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example [ rdf:predicate [ skos:example "vaem:hasOwner" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "vaem:TopQuadrant" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:hasOwner ] ;
                                    vaem:hasSteward [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example [ rdf:predicate [ skos:example "vaem:hasSteward" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "vaem:TopQuadrant" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:hasSteward ] ;
                                    vaem:intent [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example [ rdf:predicate [ skos:example "vaem:intent" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "The purpose of DTYPE is to provide, by import, a foundation for  data types." ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:intent ] ;
                                    vaem:latestPublishedVersion [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example [ rdf:predicate [ skos:example "vaem:latestPublishedVersion" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "http://www.linkedmodel.org/doc/2023/SCHEMA_dtype" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:latestPublishedVersion ] ;
                                    vaem:logo [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example [ rdf:predicate [ skos:example "vaem:logo" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "http://www.linkedmodel.org/lib/lm/images/logos/dtype_logo-300x110.png" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:logo ] ;
                                    vaem:name [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example [ rdf:predicate [ skos:example "vaem:name" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "DTYPE" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:name ] ;
                                    vaem:namespace [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example [ rdf:predicate [ skos:example "vaem:namespace" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "dtype:" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:namespace ] ;
                                    vaem:namespacePrefix [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example [ rdf:predicate [ skos:example "vaem:namespacePrefix" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "dtype" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:namespacePrefix ] ;
                                    vaem:owner [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example [ rdf:predicate [ skos:example "vaem:owner" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "LinkedModel.org" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:owner ] ;
                                    vaem:previousPublishedVersion [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example [ rdf:predicate [ skos:example "vaem:previousPublishedVersion" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "http://www.linkedmodel.org/doc/2015/SCHEMA_dtype-v1.2" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:previousPublishedVersion ] ;
                                    vaem:releaseDate [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:date [ skos:example [ rdf:predicate [ skos:example "vaem:releaseDate" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "2023-11-14" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:date ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:releaseDate ] ;
                                    vaem:revision [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example [ rdf:predicate [ skos:example "vaem:revision" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "2.1" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:revision ] ;
                                    vaem:title [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example [ rdf:predicate [ skos:example "vaem:title" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "Datatype Schema (DTYPE) - Version 2.1" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:title ] ;
                                    vaem:turtleFileURL [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:uri [ skos:example [ rdf:predicate [ skos:example "vaem:turtleFileURL" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "http://www.linkedmodel.org/dtype/schema/SCHEMA_dtype.ttl" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:turtleFileURL ] ;
                                    vaem:usesNonImportedResource [ skos:example [ vaem:GraphMetaData [ skos:example [ owl:AnnotationProperty [ skos:example [ rdf:predicate [ skos:example "vaem:usesNonImportedResource" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "dct:author" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag owl:AnnotationProperty ] ;
                                                                    linkml:uri [ skos:example [ rdf:predicate [ skos:example "vaem:usesNonImportedResource" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "dct:abstract" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:usesNonImportedResource ] ;
                                    vaem:withAttributionTo [ skos:example [ vaem:GraphMetaData [ skos:example [ linkml:string [ skos:example [ rdf:predicate [ skos:example "vaem:withAttributionTo" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "DTYPE is issued under a Creative Commons Attribution Share Alike 3.0 United States License." ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:string ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ] ;
                                            linkml:tag vaem:withAttributionTo ] ;
                                    rdfs:isDefinedBy [ skos:example [ vaem:GraphMetaData [ skos:example [ owl:Ontology [ skos:example [ rdf:predicate [ skos:example "rdfs:isDefinedBy" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "http://www.linkedmodel.org/schema/dtype" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:GMD_DTYPE" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag owl:Ontology ] ] ;
                                                            linkml:tag vaem:GraphMetaData ] ;
                                                    rdfs:Datatype [ skos:example [ owl:Ontology [ skos:example [ rdf:predicate [ skos:example "rdfs:isDefinedBy" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "http://www.linkedmodel.org/schema/dtype" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:dateUnion" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag owl:Ontology ] ] ;
                                                            linkml:tag rdfs:Datatype ] ] ;
                                            linkml:tag rdfs:isDefinedBy ] ;
                                    rdfs:subClassOf [ skos:example [ rdfs:Datatype [ skos:example [ linkml:uri [ skos:example [ rdf:predicate [ skos:example "rdfs:subClassOf" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "rdfs:Resource" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:dateUnion" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag okns:uri ] ] ;
                                                            linkml:tag rdfs:Datatype ] ] ;
                                            linkml:tag rdfs:subClassOf ] ;
                                    owl:equivalentClass [ skos:example [ rdfs:Datatype [ skos:example [ rdfs:Datatype [ skos:example [ rdf:predicate [ skos:example "owl:equivalentClass" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "N4fe5053960c84d17a6dbae500551c372" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:numericUnion" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag rdfs:Datatype ] ;
                                                                    owl:Class [ skos:example [ rdf:predicate [ skos:example "owl:equivalentClass" ;
                                                                                            linkml:tag okns:predicate ] ;
                                                                                    linkml:object [ skos:example "Na55d43ae2c594fccbce168b5ea26a8e3" ;
                                                                                            linkml:tag okns:object ] ;
                                                                                    linkml:subject [ skos:example "dtype:dateUnion" ;
                                                                                            linkml:tag okns:subject ] ] ;
                                                                            linkml:tag owl:Class ] ] ;
                                                            linkml:tag rdfs:Datatype ] ] ;
                                            linkml:tag owl:equivalentClass ] ] ;
                            linkml:tag okns:pairs ] ] ;
            linkml:tag okns:examples ] ;
    linkml:classes okns:DtypeCodeList,
        okns:DtypeCompositeCodeList,
        okns:DtypeDerivedCodeList,
        okns:DtypeEnumeratedValue,
        okns:DtypeEnumeration,
        okns:DtypeSimpleCodeList,
        okns:DtypeValueReference,
        okns:XsdAnySimpleType ;
    linkml:default_prefix "okns" ;
    linkml:default_range okns:string ;
    linkml:generation_date "2025-10-30T11:18:01"^^xsd:dateTime ;
    linkml:id okns:dtype ;
    linkml:imports okns:dc,
        okns:extended_types,
        okns:owl-rdf-rdfs,
        okns:vaem,
        linkml:types ;
    linkml:metamodel_version "1.7.0" ;
    linkml:slots okns:dtype_code,
        okns:dtype_compositeOf,
        okns:dtype_defaultObjectValue,
        okns:dtype_defaultValue,
        okns:dtype_derivedFrom,
        okns:dtype_hasMember,
        okns:dtype_isInvalid,
        okns:dtype_literal,
        okns:dtype_objectValue,
        okns:dtype_order,
        okns:dtype_orderIndex,
        okns:dtype_refersTo,
        okns:dtype_type,
        okns:dtype_value ;
    linkml:source_file "dtype.yaml" ;
    linkml:source_file_date "2025-09-03T11:21:29"^^xsd:dateTime ;
    linkml:source_file_size 41324 ;
    linkml:types okns:dtype_dateUnion,
        okns:dtype_numericUnion .


